//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace APP_MODEL.ModelData
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ModelEntitiesWebsite : DbContext
    {
        public ModelEntitiesWebsite()
            : base("name=ModelEntitiesWebsite")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbl_Appointment_Contract_Information> tbl_Appointment_Contract_Information { get; set; }
        public virtual DbSet<tbl_Appointment_Department> tbl_Appointment_Department { get; set; }
        public virtual DbSet<tbl_Appointment_Division> tbl_Appointment_Division { get; set; }
        public virtual DbSet<tbl_Appointment_Grade> tbl_Appointment_Grade { get; set; }
        public virtual DbSet<tbl_Appointment_Position> tbl_Appointment_Position { get; set; }
        public virtual DbSet<tbl_Appointment_Status_Information> tbl_Appointment_Status_Information { get; set; }
        public virtual DbSet<tbl_Appointment_Work_Location> tbl_Appointment_Work_Location { get; set; }
        public virtual DbSet<tbl_Appointment_Working_Time> tbl_Appointment_Working_Time { get; set; }
        public virtual DbSet<tbl_Client_Organization_Service_Role> tbl_Client_Organization_Service_Role { get; set; }
        public virtual DbSet<tbl_Currency> tbl_Currency { get; set; }
        public virtual DbSet<tbl_Current_Version> tbl_Current_Version { get; set; }
        public virtual DbSet<tbl_Employee_Family> tbl_Employee_Family { get; set; }
        public virtual DbSet<tbl_Error_Code> tbl_Error_Code { get; set; }
        public virtual DbSet<tbl_Error_Log> tbl_Error_Log { get; set; }
        public virtual DbSet<tbl_Function> tbl_Function { get; set; }
        public virtual DbSet<tbl_General_Number> tbl_General_Number { get; set; }
        public virtual DbSet<tbl_HeadOffice_Branch_Location> tbl_HeadOffice_Branch_Location { get; set; }
        public virtual DbSet<tbl_Holiday_Calendar> tbl_Holiday_Calendar { get; set; }
        public virtual DbSet<tbl_Job_Code> tbl_Job_Code { get; set; }
        public virtual DbSet<tbl_Job_Function> tbl_Job_Function { get; set; }
        public virtual DbSet<tbl_Job_Title> tbl_Job_Title { get; set; }
        public virtual DbSet<tbl_Language> tbl_Language { get; set; }
        public virtual DbSet<tbl_Log_System> tbl_Log_System { get; set; }
        public virtual DbSet<tbl_Map_Location> tbl_Map_Location { get; set; }
        public virtual DbSet<tbl_Menu_Function> tbl_Menu_Function { get; set; }
        public virtual DbSet<tbl_Menu_Function_Restriction> tbl_Menu_Function_Restriction { get; set; }
        public virtual DbSet<tbl_Menu_Restriction> tbl_Menu_Restriction { get; set; }
        public virtual DbSet<tbl_Nationality> tbl_Nationality { get; set; }
        public virtual DbSet<tbl_Organization_Account_Group_Maintenence> tbl_Organization_Account_Group_Maintenence { get; set; }
        public virtual DbSet<tbl_Organization_Service_Role> tbl_Organization_Service_Role { get; set; }
        public virtual DbSet<tbl_Organization_Team> tbl_Organization_Team { get; set; }
        public virtual DbSet<tbl_Organization_User> tbl_Organization_User { get; set; }
        public virtual DbSet<tbl_Payroll_Schedule> tbl_Payroll_Schedule { get; set; }
        public virtual DbSet<tbl_Role_Menu> tbl_Role_Menu { get; set; }
        public virtual DbSet<tbl_Salary_Grade> tbl_Salary_Grade { get; set; }
        public virtual DbSet<tbl_Service_Role> tbl_Service_Role { get; set; }
        public virtual DbSet<tbl_Session_Login> tbl_Session_Login { get; set; }
        public virtual DbSet<tbl_SysParam> tbl_SysParam { get; set; }
        public virtual DbSet<tbl_Tax_Status_Effective_Year> tbl_Tax_Status_Effective_Year { get; set; }
        public virtual DbSet<tbl_User_Role> tbl_User_Role { get; set; }
        public virtual DbSet<tbl_Work_Location> tbl_Work_Location { get; set; }
        public virtual DbSet<tbl_Workflow_Status> tbl_Workflow_Status { get; set; }
        public virtual DbSet<vw_appointment_information> vw_appointment_information { get; set; }
        public virtual DbSet<vw_Employee_Appointment_Actual> vw_Employee_Appointment_Actual { get; set; }
        public virtual DbSet<vw_Menu_Function> vw_Menu_Function { get; set; }
        public virtual DbSet<vw_New_BPJS_Manpower> vw_New_BPJS_Manpower { get; set; }
        public virtual DbSet<vw_Organization_Menu> vw_Organization_Menu { get; set; }
        public virtual DbSet<vw_Organization_Menu_Function> vw_Organization_Menu_Function { get; set; }
        public virtual DbSet<vw_role> vw_role { get; set; }
        public virtual DbSet<vw_Role_Menu_Function> vw_Role_Menu_Function { get; set; }
        public virtual DbSet<vw_Role_Organization_Menu_Function> vw_Role_Organization_Menu_Function { get; set; }
        public virtual DbSet<vw_Team> vw_Team { get; set; }
        public virtual DbSet<vw_user> vw_user { get; set; }
        public virtual DbSet<vw_User_Menu> vw_User_Menu { get; set; }
        public virtual DbSet<vw_user_organization> vw_user_organization { get; set; }
        public virtual DbSet<vw_User_Role> vw_User_Role { get; set; }
        public virtual DbSet<vw_User_Role_Menu> vw_User_Role_Menu { get; set; }
        public virtual DbSet<vw_User_Role_Menu_Function> vw_User_Role_Menu_Function { get; set; }
        public virtual DbSet<tbl_Hist_Role_Menu> tbl_Hist_Role_Menu { get; set; }
        public virtual DbSet<tbl_Tax> tbl_Tax { get; set; }
        public virtual DbSet<tbl_Additional_Payroll_Detail> tbl_Additional_Payroll_Detail { get; set; }
        public virtual DbSet<tbl_Payroll_Calculation_Component> tbl_Payroll_Calculation_Component { get; set; }
        public virtual DbSet<tbl_Payroll_Calculation_Employee> tbl_Payroll_Calculation_Employee { get; set; }
        public virtual DbSet<tbl_Employee_ID_Information> tbl_Employee_ID_Information { get; set; }
        public virtual DbSet<vw_Upload_Mapping> vw_Upload_Mapping { get; set; }
        public virtual DbSet<tbl_Payroll_Calculation> tbl_Payroll_Calculation { get; set; }
        public virtual DbSet<tbl_Payroll_Calculation_Component_Ex> tbl_Payroll_Calculation_Component_Ex { get; set; }
        public virtual DbSet<tbl_Payroll_Calculation_Employee_Ex> tbl_Payroll_Calculation_Employee_Ex { get; set; }
        public virtual DbSet<vw_Employee_Appointment_Work_Location> vw_Employee_Appointment_Work_Location { get; set; }
        public virtual DbSet<tbl_Cost_Parameter> tbl_Cost_Parameter { get; set; }
        public virtual DbSet<tbl_Employee_Appointment> tbl_Employee_Appointment { get; set; }
        public virtual DbSet<tbl_General_Parameter> tbl_General_Parameter { get; set; }
        public virtual DbSet<tbl_Hist_Organization_Menu> tbl_Hist_Organization_Menu { get; set; }
        public virtual DbSet<tbl_Hist_Role> tbl_Hist_Role { get; set; }
        public virtual DbSet<tbl_Non_Taxable_Income_Parameter> tbl_Non_Taxable_Income_Parameter { get; set; }
        public virtual DbSet<tbl_Organization> tbl_Organization { get; set; }
        public virtual DbSet<tbl_Organization_Menu> tbl_Organization_Menu { get; set; }
        public virtual DbSet<tbl_Role> tbl_Role { get; set; }
        public virtual DbSet<tbl_Tax_Rate_Parameter> tbl_Tax_Rate_Parameter { get; set; }
        public virtual DbSet<vw_Organization_Payroll_Component_Summary> vw_Organization_Payroll_Component_Summary { get; set; }
        public virtual DbSet<vw_Role_Menu> vw_Role_Menu { get; set; }
        public virtual DbSet<tbl_Compensation_Benefit> tbl_Compensation_Benefit { get; set; }
        public virtual DbSet<tbl_Payroll_Variable_Detail> tbl_Payroll_Variable_Detail { get; set; }
        public virtual DbSet<tbl_Payroll_Transaction> tbl_Payroll_Transaction { get; set; }
        public virtual DbSet<tbl_Holiday_Calendar_Organization_Details> tbl_Holiday_Calendar_Organization_Details { get; set; }
        public virtual DbSet<tbl_Tax_Period_Month> tbl_Tax_Period_Month { get; set; }
        public virtual DbSet<tbl_Chart_Account> tbl_Chart_Account { get; set; }
        public virtual DbSet<tbl_Client_Organization_Team> tbl_Client_Organization_Team { get; set; }
        public virtual DbSet<tbl_Cost_Center> tbl_Cost_Center { get; set; }
        public virtual DbSet<tbl_Tax_Period> tbl_Tax_Period { get; set; }
        public virtual DbSet<tbl_ID_Number> tbl_ID_Number { get; set; }
        public virtual DbSet<tbl_List_Of_Bank> tbl_List_Of_Bank { get; set; }
        public virtual DbSet<tbl_Contact_Person> tbl_Contact_Person { get; set; }
        public virtual DbSet<tbl_Holiday_Calendar_Organization> tbl_Holiday_Calendar_Organization { get; set; }
        public virtual DbSet<tbl_Organization_Branch_NPWP> tbl_Organization_Branch_NPWP { get; set; }
        public virtual DbSet<tbl_BPJS_Healthcare> tbl_BPJS_Healthcare { get; set; }
        public virtual DbSet<tbl_BPJS_Manpower> tbl_BPJS_Manpower { get; set; }
        public virtual DbSet<tbl_Audit_Trail> tbl_Audit_Trail { get; set; }
        public virtual DbSet<tbl_Employee_Payment> tbl_Employee_Payment { get; set; }
        public virtual DbSet<tbl_Message> tbl_Message { get; set; }
        public virtual DbSet<vw_AuditTrails> vw_AuditTrails { get; set; }
        public virtual DbSet<vw_Compensation_Benefit> vw_Compensation_Benefit { get; set; }
        public virtual DbSet<tbl_Employee_Payroll_Component> tbl_Employee_Payroll_Component { get; set; }
        public virtual DbSet<tbl_Config_Table_Header> tbl_Config_Table_Header { get; set; }
        public virtual DbSet<tbl_Organization_Payroll_Component> tbl_Organization_Payroll_Component { get; set; }
        public virtual DbSet<tbl_Employee_Payroll_Component_Effective> tbl_Employee_Payroll_Component_Effective { get; set; }
        public virtual DbSet<vw_Employee_Component_Formula> vw_Employee_Component_Formula { get; set; }
        public virtual DbSet<tbl_User_Organization_Team> tbl_User_Organization_Team { get; set; }
        public virtual DbSet<tbl_Exchange_Rate_Details> tbl_Exchange_Rate_Details { get; set; }
        public virtual DbSet<tbl_Exchange_Rate> tbl_Exchange_Rate { get; set; }
        public virtual DbSet<tbl_Upload_Mapping> tbl_Upload_Mapping { get; set; }
        public virtual DbSet<tbl_Payroll_Tax_Correction> tbl_Payroll_Tax_Correction { get; set; }
        public virtual DbSet<tbl_Payroll_Period> tbl_Payroll_Period { get; set; }
        public virtual DbSet<tbl_Payroll_Period_Detail> tbl_Payroll_Period_Detail { get; set; }
        public virtual DbSet<tbl_Employee_Address> tbl_Employee_Address { get; set; }
        public virtual DbSet<tbl_Payroll_Additional> tbl_Payroll_Additional { get; set; }
        public virtual DbSet<tbl_Payslip> tbl_Payslip { get; set; }
        public virtual DbSet<vw_Upload_Staging_Header> vw_Upload_Staging_Header { get; set; }
        public virtual DbSet<vw_Login_Epayslip> vw_Login_Epayslip { get; set; }
        public virtual DbSet<tbl_Payroll_Closing> tbl_Payroll_Closing { get; set; }
        public virtual DbSet<tbl_Additional_Payroll> tbl_Additional_Payroll { get; set; }
        public virtual DbSet<tbl_Payroll_Variable> tbl_Payroll_Variable { get; set; }
        public virtual DbSet<vw_Payroll_Variable> vw_Payroll_Variable { get; set; }
        public virtual DbSet<tbl_HeadOffice_Branch> tbl_HeadOffice_Branch { get; set; }
        public virtual DbSet<vw_Generate_Bank_File> vw_Generate_Bank_File { get; set; }
        public virtual DbSet<vw_Tax_Period_Summary> vw_Tax_Period_Summary { get; set; }
        public virtual DbSet<vw_Payroll_Period> vw_Payroll_Period { get; set; }
        public virtual DbSet<tbl_Generate_Bank_File_Template_Detail> tbl_Generate_Bank_File_Template_Detail { get; set; }
        public virtual DbSet<tbl_Generate_Bank_File_Template_Header> tbl_Generate_Bank_File_Template_Header { get; set; }
        public virtual DbSet<vw_Generate_Bank_File_Template> vw_Generate_Bank_File_Template { get; set; }
        public virtual DbSet<vw_Payroll_Period_Summary> vw_Payroll_Period_Summary { get; set; }
        public virtual DbSet<vw_Generate_Bank_File_Details_Summary> vw_Generate_Bank_File_Details_Summary { get; set; }
        public virtual DbSet<tbl_Generate_Bank_File_Result> tbl_Generate_Bank_File_Result { get; set; }
        public virtual DbSet<tbl_Payroll_Slip_Component> tbl_Payroll_Slip_Component { get; set; }
        public virtual DbSet<tbl_Payroll_Slip_Employee> tbl_Payroll_Slip_Employee { get; set; }
        public virtual DbSet<tbl_Report_Tax_Summary> tbl_Report_Tax_Summary { get; set; }
        public virtual DbSet<tbl_Tax_Object_Code> tbl_Tax_Object_Code { get; set; }
        public virtual DbSet<vw_Payroll_Tax_Calculation_Approved> vw_Payroll_Tax_Calculation_Approved { get; set; }
        public virtual DbSet<tbl_Report_Payroll_Calculation_Details> tbl_Report_Payroll_Calculation_Details { get; set; }
        public virtual DbSet<vw_Organization_Email_Setup_Summary> vw_Organization_Email_Setup_Summary { get; set; }
        public virtual DbSet<vw_Report_Employee_JKK> vw_Report_Employee_JKK { get; set; }
        public virtual DbSet<tbl_Notification_Log> tbl_Notification_Log { get; set; }
        public virtual DbSet<tbl_Organization_Working_Time> tbl_Organization_Working_Time { get; set; }
        public virtual DbSet<tbl_Report_Layout> tbl_Report_Layout { get; set; }
        public virtual DbSet<vw_Employee_Payslip_Summary> vw_Employee_Payslip_Summary { get; set; }
        public virtual DbSet<vw_Calculation_Transaction> vw_Calculation_Transaction { get; set; }
        public virtual DbSet<vw_Report_Employee_Information> vw_Report_Employee_Information { get; set; }
        public virtual DbSet<vw_Payroll_Slip_List_Bank> vw_Payroll_Slip_List_Bank { get; set; }
        public virtual DbSet<tbl_Report_Payroll_Calculation> tbl_Report_Payroll_Calculation { get; set; }
        public virtual DbSet<vw_Report_Employee_Payroll_History> vw_Report_Employee_Payroll_History { get; set; }
        public virtual DbSet<vw_Report_Summary_History> vw_Report_Summary_History { get; set; }
        public virtual DbSet<tbl_Report_Template> tbl_Report_Template { get; set; }
        public virtual DbSet<vw_TaxPeriodMonth> vw_TaxPeriodMonth { get; set; }
        public virtual DbSet<vw_Employee_Appointment_WorkingTime> vw_Employee_Appointment_WorkingTime { get; set; }
        public virtual DbSet<vw_Employee_Appointment_Status> vw_Employee_Appointment_Status { get; set; }
        public virtual DbSet<vw_Bank_Employee> vw_Bank_Employee { get; set; }
        public virtual DbSet<vw_Download_Organization_Payroll_Component> vw_Download_Organization_Payroll_Component { get; set; }
        public virtual DbSet<vw_Run_Closing> vw_Run_Closing { get; set; }
        public virtual DbSet<vw_Additional_Payroll> vw_Additional_Payroll { get; set; }
        public virtual DbSet<vw_Payroll_Calculation_Period> vw_Payroll_Calculation_Period { get; set; }
        public virtual DbSet<vw_Report_Employee_Tax_Component> vw_Report_Employee_Tax_Component { get; set; }
        public virtual DbSet<tbl_Generate_Bank_File> tbl_Generate_Bank_File { get; set; }
        public virtual DbSet<tbl_Organization_Email_Setup> tbl_Organization_Email_Setup { get; set; }
        public virtual DbSet<vw_Calculation_Summary> vw_Calculation_Summary { get; set; }
        public virtual DbSet<vw_Calculation_Tax_All> vw_Calculation_Tax_All { get; set; }
        public virtual DbSet<tbl_Branch_List_Of_Bank> tbl_Branch_List_Of_Bank { get; set; }
        public virtual DbSet<tbl_History_User> tbl_History_User { get; set; }
        public virtual DbSet<vw_Employee_Payroll_Component> vw_Employee_Payroll_Component { get; set; }
        public virtual DbSet<tbl_Menu> tbl_Menu { get; set; }
        public virtual DbSet<vw_Payroll_Aditional> vw_Payroll_Aditional { get; set; }
        public virtual DbSet<tbl_Exchange_File> tbl_Exchange_File { get; set; }
        public virtual DbSet<vw_Payroll_Slip_Description_Employee> vw_Payroll_Slip_Description_Employee { get; set; }
        public virtual DbSet<tbl_Payroll_Slip> tbl_Payroll_Slip { get; set; }
        public virtual DbSet<vw_Payroll_Slip_Employee_Summary> vw_Payroll_Slip_Employee_Summary { get; set; }
        public virtual DbSet<tbl_Organization_Group> tbl_Organization_Group { get; set; }
        public virtual DbSet<tbl_Organization_Group_Detail> tbl_Organization_Group_Detail { get; set; }
        public virtual DbSet<tbl_Leave_Types> tbl_Leave_Types { get; set; }
        public virtual DbSet<tbl_User_Trial> tbl_User_Trial { get; set; }
        public virtual DbSet<tbl_Payslip_Setting> tbl_Payslip_Setting { get; set; }
        public virtual DbSet<tbl_Employee_Leave_Entitlement> tbl_Employee_Leave_Entitlement { get; set; }
        public virtual DbSet<tbl_Employee_Leave_Entitlement_Detail> tbl_Employee_Leave_Entitlement_Detail { get; set; }
        public virtual DbSet<tbl_Report_Employee> tbl_Report_Employee { get; set; }
        public virtual DbSet<vw_Employee_Leave_Entitlement_Summary> vw_Employee_Leave_Entitlement_Summary { get; set; }
        public virtual DbSet<tbl_Payslip_Template> tbl_Payslip_Template { get; set; }
        public virtual DbSet<tbl_Chat_Account> tbl_Chat_Account { get; set; }
        public virtual DbSet<tbl_Chat_Log> tbl_Chat_Log { get; set; }
        public virtual DbSet<tbl_Loan> tbl_Loan { get; set; }
        public virtual DbSet<vw_Loan> vw_Loan { get; set; }
        public virtual DbSet<vw_Download_Employee_Payroll_Component> vw_Download_Employee_Payroll_Component { get; set; }
        public virtual DbSet<tbl_Base_Location> tbl_Base_Location { get; set; }
        public virtual DbSet<tbl_Session_Mobile> tbl_Session_Mobile { get; set; }
        public virtual DbSet<vw_Employee_Tax_Status> vw_Employee_Tax_Status { get; set; }
        public virtual DbSet<vw_Base_Location> vw_Base_Location { get; set; }
        public virtual DbSet<vw_Calculation_Transaction_Approved> vw_Calculation_Transaction_Approved { get; set; }
        public virtual DbSet<vw_Work_Location> vw_Work_Location { get; set; }
        public virtual DbSet<tbl_Organization_Signature> tbl_Organization_Signature { get; set; }
        public virtual DbSet<tbl_Mobile_Captha> tbl_Mobile_Captha { get; set; }
        public virtual DbSet<tbl_Payroll_Calculation_Log> tbl_Payroll_Calculation_Log { get; set; }
        public virtual DbSet<tbl_Employee> tbl_Employee { get; set; }
        public virtual DbSet<tbl_User> tbl_User { get; set; }
        public virtual DbSet<vw_Employee_Approval> vw_Employee_Approval { get; set; }
        public virtual DbSet<tbl_Bukti_Potong_Permanent> tbl_Bukti_Potong_Permanent { get; set; }
        public virtual DbSet<tbl_Employee_Document> tbl_Employee_Document { get; set; }
        public virtual DbSet<tbl_Menu_Icon_Mobile> tbl_Menu_Icon_Mobile { get; set; }
        public virtual DbSet<tbl_Employee_Approval> tbl_Employee_Approval { get; set; }
        public virtual DbSet<vw_User_Mobile> vw_User_Mobile { get; set; }
        public virtual DbSet<tbl_Organization_Structure> tbl_Organization_Structure { get; set; }
        public virtual DbSet<tbl_Generate_Bank_File_Details> tbl_Generate_Bank_File_Details { get; set; }
        public virtual DbSet<vw_Generate_Bank_File_Details> vw_Generate_Bank_File_Details { get; set; }
        public virtual DbSet<tbl_Third_Party> tbl_Third_Party { get; set; }
        public virtual DbSet<tbl_Third_Party_Content> tbl_Third_Party_Content { get; set; }
        public virtual DbSet<tbl_Third_Party_Employee> tbl_Third_Party_Employee { get; set; }
        public virtual DbSet<tbl_Third_Party_Log> tbl_Third_Party_Log { get; set; }
        public virtual DbSet<tbl_Base_Location_Detail> tbl_Base_Location_Detail { get; set; }
        public virtual DbSet<tbl_Base_Location_Header> tbl_Base_Location_Header { get; set; }
        public virtual DbSet<vw_Base_Location_List> vw_Base_Location_List { get; set; }
        public virtual DbSet<vw_Base_Location_All> vw_Base_Location_All { get; set; }
        public virtual DbSet<tbl_Report_Column> tbl_Report_Column { get; set; }
        public virtual DbSet<tbl_Report_Result> tbl_Report_Result { get; set; }
        public virtual DbSet<tbl_Report_Setting_Detail> tbl_Report_Setting_Detail { get; set; }
        public virtual DbSet<tbl_Reminder> tbl_Reminder { get; set; }
        public virtual DbSet<tbl_Reminder_Employee> tbl_Reminder_Employee { get; set; }
        public virtual DbSet<tbl_Reminder_User> tbl_Reminder_User { get; set; }
        public virtual DbSet<tbl_Employee_Overtime> tbl_Employee_Overtime { get; set; }
        public virtual DbSet<tbl_Employee_Claim> tbl_Employee_Claim { get; set; }
        public virtual DbSet<tbl_Timeline_Mobile> tbl_Timeline_Mobile { get; set; }
        public virtual DbSet<tbl_Apply_Leave> tbl_Apply_Leave { get; set; }
        public virtual DbSet<tbl_Bank_Information> tbl_Bank_Information { get; set; }
        public virtual DbSet<tbl_Leave_History> tbl_Leave_History { get; set; }
        public virtual DbSet<vw_Leave_Employee> vw_Leave_Employee { get; set; }
        public virtual DbSet<tbl_Report_Setting> tbl_Report_Setting { get; set; }
        public virtual DbSet<vw_Report_Setting> vw_Report_Setting { get; set; }
        public virtual DbSet<tbl_Trx_Bank_Transfer> tbl_Trx_Bank_Transfer { get; set; }
        public virtual DbSet<tbl_Trx_Bank_Transfer_Detail> tbl_Trx_Bank_Transfer_Detail { get; set; }
        public virtual DbSet<vw_Trx_Bank_Transfer> vw_Trx_Bank_Transfer { get; set; }
        public virtual DbSet<tbl_Payroll_Tax_Calculation_Np> tbl_Payroll_Tax_Calculation_Np { get; set; }
        public virtual DbSet<vw_Payroll_Payment_Details> vw_Payroll_Payment_Details { get; set; }
        public virtual DbSet<vw_Payroll_Payment_Summary> vw_Payroll_Payment_Summary { get; set; }
        public virtual DbSet<tbl_Order> tbl_Order { get; set; }
        public virtual DbSet<tbl_Promotion> tbl_Promotion { get; set; }
        public virtual DbSet<tbl_Tiering> tbl_Tiering { get; set; }
        public virtual DbSet<tbl_User_Order> tbl_User_Order { get; set; }
        public virtual DbSet<tbl_Blog_Posts> tbl_Blog_Posts { get; set; }
        public virtual DbSet<vw_Blog_Summary> vw_Blog_Summary { get; set; }
        public virtual DbSet<tbl_Order_Promotion_Detail> tbl_Order_Promotion_Detail { get; set; }
        public virtual DbSet<tbl_Order_Tiering_Detail> tbl_Order_Tiering_Detail { get; set; }
        public virtual DbSet<tbl_Menu_Blog> tbl_Menu_Blog { get; set; }
        public virtual DbSet<tbl_Package_Pricing> tbl_Package_Pricing { get; set; }
        public virtual DbSet<vw_Chat_Account> vw_Chat_Account { get; set; }
        public virtual DbSet<vw_Chat_Log> vw_Chat_Log { get; set; }
        public virtual DbSet<tbl_Contact_Support> tbl_Contact_Support { get; set; }
        public virtual DbSet<tbl_Payslip_Template_Detail> tbl_Payslip_Template_Detail { get; set; }
        public virtual DbSet<tbl_Employee_Overtime_Tier> tbl_Employee_Overtime_Tier { get; set; }
        public virtual DbSet<tbl_Apply_Leave_Detail> tbl_Apply_Leave_Detail { get; set; }
        public virtual DbSet<tbl_Log_WebService> tbl_Log_WebService { get; set; }
        public virtual DbSet<tbl_Attendance_Mapping_DeviceOrg> tbl_Attendance_Mapping_DeviceOrg { get; set; }
        public virtual DbSet<tbl_Attendance_Priority> tbl_Attendance_Priority { get; set; }
        public virtual DbSet<tbl_Attendance_Rules> tbl_Attendance_Rules { get; set; }
        public virtual DbSet<tbl_Attendance_Summary_Sync> tbl_Attendance_Summary_Sync { get; set; }
        public virtual DbSet<tbl_Cut_Off_Period> tbl_Cut_Off_Period { get; set; }
        public virtual DbSet<tbl_User_Attendance> tbl_User_Attendance { get; set; }
        public virtual DbSet<vw_Attendance_Finger_ID> vw_Attendance_Finger_ID { get; set; }
        public virtual DbSet<vw_Attendance_Leave> vw_Attendance_Leave { get; set; }
        public virtual DbSet<tbl_Attendance_Device> tbl_Attendance_Device { get; set; }
        public virtual DbSet<vw_Attendance_Request_Details> vw_Attendance_Request_Details { get; set; }
        public virtual DbSet<tbl_Attendance_Request> tbl_Attendance_Request { get; set; }
        public virtual DbSet<tbl_Attendance_History_Upload> tbl_Attendance_History_Upload { get; set; }
        public virtual DbSet<vw_Attendance_Summary_Sync> vw_Attendance_Summary_Sync { get; set; }
        public virtual DbSet<tbl_Menu_Ess> tbl_Menu_Ess { get; set; }
        public virtual DbSet<vw_User_Report_Attendance> vw_User_Report_Attendance { get; set; }
        public virtual DbSet<vw_Employee_Appointment_Status_ALL> vw_Employee_Appointment_Status_ALL { get; set; }
        public virtual DbSet<tbl_Upload_Staging> tbl_Upload_Staging { get; set; }
        public virtual DbSet<tbl_Upload_Staging_Detail> tbl_Upload_Staging_Detail { get; set; }
        public virtual DbSet<tbl_Upload_Staging_Header> tbl_Upload_Staging_Header { get; set; }
        public virtual DbSet<vw_Payroll_Detail_Calculation> vw_Payroll_Detail_Calculation { get; set; }
        public virtual DbSet<vw_Employee_Leave> vw_Employee_Leave { get; set; }
        public virtual DbSet<tbl_Employee_Leave_Entitlement_Restriction> tbl_Employee_Leave_Entitlement_Restriction { get; set; }
        public virtual DbSet<vw_SessionKey> vw_SessionKey { get; set; }
        public virtual DbSet<tbl_User_Mobile> tbl_User_Mobile { get; set; }
        public virtual DbSet<vw_Timeline_Mobile> vw_Timeline_Mobile { get; set; }
        public virtual DbSet<vw_Calculation_Tax_History> vw_Calculation_Tax_History { get; set; }
        public virtual DbSet<tbl_Customer_Notice> tbl_Customer_Notice { get; set; }
        public virtual DbSet<tbl_Notification_Template> tbl_Notification_Template { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int SP_ERROR_LOG(string error_Source, string error_Description)
        {
            var error_SourceParameter = error_Source != null ?
                new ObjectParameter("Error_Source", error_Source) :
                new ObjectParameter("Error_Source", typeof(string));
    
            var error_DescriptionParameter = error_Description != null ?
                new ObjectParameter("Error_Description", error_Description) :
                new ObjectParameter("Error_Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ERROR_LOG", error_SourceParameter, error_DescriptionParameter);
        }
    
        public virtual int SP_UPDATE_HEADER_ID_AUDIT(Nullable<System.Guid> vERSION_ID, string hEADER_ID)
        {
            var vERSION_IDParameter = vERSION_ID.HasValue ?
                new ObjectParameter("VERSION_ID", vERSION_ID) :
                new ObjectParameter("VERSION_ID", typeof(System.Guid));
    
            var hEADER_IDParameter = hEADER_ID != null ?
                new ObjectParameter("HEADER_ID", hEADER_ID) :
                new ObjectParameter("HEADER_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_HEADER_ID_AUDIT", vERSION_IDParameter, hEADER_IDParameter);
        }
    
        public virtual int SP_ROLLBACK(string hEADER_ID)
        {
            var hEADER_IDParameter = hEADER_ID != null ?
                new ObjectParameter("HEADER_ID", hEADER_ID) :
                new ObjectParameter("HEADER_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ROLLBACK", hEADER_IDParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "Get_Employee_By_Period")]
        public virtual IQueryable<Get_Employee_By_Period_Result> Get_Employee_By_Period(Nullable<System.Guid> organization_ID)
        {
            var organization_IDParameter = organization_ID.HasValue ?
                new ObjectParameter("Organization_ID", organization_ID) :
                new ObjectParameter("Organization_ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Get_Employee_By_Period_Result>("[ModelEntitiesWebsite].[Get_Employee_By_Period](@Organization_ID)", organization_IDParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "Get_Payroll_Period")]
        public virtual IQueryable<Get_Payroll_Period_Result> Get_Payroll_Period(Nullable<System.Guid> organization_ID)
        {
            var organization_IDParameter = organization_ID.HasValue ?
                new ObjectParameter("Organization_ID", organization_ID) :
                new ObjectParameter("Organization_ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Get_Payroll_Period_Result>("[ModelEntitiesWebsite].[Get_Payroll_Period](@Organization_ID)", organization_IDParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "Check_Payroll_Period")]
        public virtual IQueryable<Check_Payroll_Period_Result> Check_Payroll_Period(Nullable<System.Guid> payroll_Period_Id)
        {
            var payroll_Period_IdParameter = payroll_Period_Id.HasValue ?
                new ObjectParameter("Payroll_Period_Id", payroll_Period_Id) :
                new ObjectParameter("Payroll_Period_Id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Check_Payroll_Period_Result>("[ModelEntitiesWebsite].[Check_Payroll_Period](@Payroll_Period_Id)", payroll_Period_IdParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "checkUploadedFile")]
        public virtual IQueryable<checkUploadedFile_Result> checkUploadedFile(Nullable<System.Guid> uPLOAD_ID)
        {
            var uPLOAD_IDParameter = uPLOAD_ID.HasValue ?
                new ObjectParameter("UPLOAD_ID", uPLOAD_ID) :
                new ObjectParameter("UPLOAD_ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<checkUploadedFile_Result>("[ModelEntitiesWebsite].[checkUploadedFile](@UPLOAD_ID)", uPLOAD_IDParameter);
        }
    
        public virtual int SP_TAX_CALCULATION(string calculation_ID)
        {
            var calculation_IDParameter = calculation_ID != null ?
                new ObjectParameter("Calculation_ID", calculation_ID) :
                new ObjectParameter("Calculation_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_TAX_CALCULATION", calculation_IDParameter);
        }
    
        public virtual int SP_TAX_SEVERANCE_CALCULATION(string calculation_Id)
        {
            var calculation_IdParameter = calculation_Id != null ?
                new ObjectParameter("Calculation_Id", calculation_Id) :
                new ObjectParameter("Calculation_Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_TAX_SEVERANCE_CALCULATION", calculation_IdParameter);
        }
    
        public virtual int SP_CLOSING(string closing_ID)
        {
            var closing_IDParameter = closing_ID != null ?
                new ObjectParameter("Closing_ID", closing_ID) :
                new ObjectParameter("Closing_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CLOSING", closing_IDParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "Get_Payroll_Period_NP")]
        public virtual IQueryable<Get_Payroll_Period_NP_Result> Get_Payroll_Period_NP(Nullable<System.Guid> organization_ID)
        {
            var organization_IDParameter = organization_ID.HasValue ?
                new ObjectParameter("Organization_ID", organization_ID) :
                new ObjectParameter("Organization_ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Get_Payroll_Period_NP_Result>("[ModelEntitiesWebsite].[Get_Payroll_Period_NP](@Organization_ID)", organization_IDParameter);
        }
    
        public virtual int SP_CHECK_DUPLICATE_RECORD(Nullable<System.Guid> staging_ID)
        {
            var staging_IDParameter = staging_ID.HasValue ?
                new ObjectParameter("Staging_ID", staging_ID) :
                new ObjectParameter("Staging_ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CHECK_DUPLICATE_RECORD", staging_IDParameter);
        }
    
        public virtual int SP_CHECK_VALID_RECORD(Nullable<System.Guid> staging_ID)
        {
            var staging_IDParameter = staging_ID.HasValue ?
                new ObjectParameter("Staging_ID", staging_ID) :
                new ObjectParameter("Staging_ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CHECK_VALID_RECORD", staging_IDParameter);
        }
    
        public virtual int SP_MASKING_VALUE(Nullable<System.Guid> staging_ID)
        {
            var staging_IDParameter = staging_ID.HasValue ?
                new ObjectParameter("Staging_ID", staging_ID) :
                new ObjectParameter("Staging_ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_MASKING_VALUE", staging_IDParameter);
        }
    
        public virtual int SP_GENERATE_BANK_TEXT_FILE(Nullable<System.Guid> gENERATE_ID)
        {
            var gENERATE_IDParameter = gENERATE_ID.HasValue ?
                new ObjectParameter("GENERATE_ID", gENERATE_ID) :
                new ObjectParameter("GENERATE_ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GENERATE_BANK_TEXT_FILE", gENERATE_IDParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "checkUploadedFileNew")]
        public virtual IQueryable<checkUploadedFileNew_Result> checkUploadedFileNew(Nullable<System.Guid> uPLOAD_ID)
        {
            var uPLOAD_IDParameter = uPLOAD_ID.HasValue ?
                new ObjectParameter("UPLOAD_ID", uPLOAD_ID) :
                new ObjectParameter("UPLOAD_ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<checkUploadedFileNew_Result>("[ModelEntitiesWebsite].[checkUploadedFileNew](@UPLOAD_ID)", uPLOAD_IDParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "Get_Report_Employee_Information")]
        public virtual IQueryable<Get_Report_Employee_Information_Result> Get_Report_Employee_Information(Nullable<System.Guid> period_ID)
        {
            var period_IDParameter = period_ID.HasValue ?
                new ObjectParameter("Period_ID", period_ID) :
                new ObjectParameter("Period_ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Get_Report_Employee_Information_Result>("[ModelEntitiesWebsite].[Get_Report_Employee_Information](@Period_ID)", period_IDParameter);
        }
    
        public virtual int SP_REPORT_PAYROLL_CALCULATION(Nullable<System.Guid> gENERATE_ID)
        {
            var gENERATE_IDParameter = gENERATE_ID.HasValue ?
                new ObjectParameter("GENERATE_ID", gENERATE_ID) :
                new ObjectParameter("GENERATE_ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_REPORT_PAYROLL_CALCULATION", gENERATE_IDParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "generateReport_1721_Tidak_Final")]
        public virtual IQueryable<generateReport_1721_Tidak_Final_Result> generateReport_1721_Tidak_Final(string organization_Tax_ID, string tax_Period)
        {
            var organization_Tax_IDParameter = organization_Tax_ID != null ?
                new ObjectParameter("Organization_Tax_ID", organization_Tax_ID) :
                new ObjectParameter("Organization_Tax_ID", typeof(string));
    
            var tax_PeriodParameter = tax_Period != null ?
                new ObjectParameter("Tax_Period", tax_Period) :
                new ObjectParameter("Tax_Period", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<generateReport_1721_Tidak_Final_Result>("[ModelEntitiesWebsite].[generateReport_1721_Tidak_Final](@Organization_Tax_ID, @Tax_Period)", organization_Tax_IDParameter, tax_PeriodParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "Get_ReportEmpoyeePayrollHistory")]
        public virtual IQueryable<Get_ReportEmpoyeePayrollHistory_Result> Get_ReportEmpoyeePayrollHistory(string organization_ID, Nullable<System.DateTime> up_To_Payroll_Period)
        {
            var organization_IDParameter = organization_ID != null ?
                new ObjectParameter("Organization_ID", organization_ID) :
                new ObjectParameter("Organization_ID", typeof(string));
    
            var up_To_Payroll_PeriodParameter = up_To_Payroll_Period.HasValue ?
                new ObjectParameter("Up_To_Payroll_Period", up_To_Payroll_Period) :
                new ObjectParameter("Up_To_Payroll_Period", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Get_ReportEmpoyeePayrollHistory_Result>("[ModelEntitiesWebsite].[Get_ReportEmpoyeePayrollHistory](@Organization_ID, @Up_To_Payroll_Period)", organization_IDParameter, up_To_Payroll_PeriodParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "Get_ReportSummaryHistory")]
        public virtual IQueryable<Get_ReportSummaryHistory_Result> Get_ReportSummaryHistory(string organization_ID, Nullable<System.DateTime> up_To_Payroll_Period)
        {
            var organization_IDParameter = organization_ID != null ?
                new ObjectParameter("Organization_ID", organization_ID) :
                new ObjectParameter("Organization_ID", typeof(string));
    
            var up_To_Payroll_PeriodParameter = up_To_Payroll_Period.HasValue ?
                new ObjectParameter("Up_To_Payroll_Period", up_To_Payroll_Period) :
                new ObjectParameter("Up_To_Payroll_Period", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Get_ReportSummaryHistory_Result>("[ModelEntitiesWebsite].[Get_ReportSummaryHistory](@Organization_ID, @Up_To_Payroll_Period)", organization_IDParameter, up_To_Payroll_PeriodParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "generateReport_FundRequisition")]
        public virtual IQueryable<generateReport_FundRequisition_Result> generateReport_FundRequisition(Nullable<System.Guid> organization_ID, Nullable<System.Guid> payroll_Period_ID, Nullable<int> run, string employment_Status, string client_PIC_Name, Nullable<double> bank_Charges, string transfer_To)
        {
            var organization_IDParameter = organization_ID.HasValue ?
                new ObjectParameter("Organization_ID", organization_ID) :
                new ObjectParameter("Organization_ID", typeof(System.Guid));
    
            var payroll_Period_IDParameter = payroll_Period_ID.HasValue ?
                new ObjectParameter("Payroll_Period_ID", payroll_Period_ID) :
                new ObjectParameter("Payroll_Period_ID", typeof(System.Guid));
    
            var runParameter = run.HasValue ?
                new ObjectParameter("Run", run) :
                new ObjectParameter("Run", typeof(int));
    
            var employment_StatusParameter = employment_Status != null ?
                new ObjectParameter("Employment_Status", employment_Status) :
                new ObjectParameter("Employment_Status", typeof(string));
    
            var client_PIC_NameParameter = client_PIC_Name != null ?
                new ObjectParameter("Client_PIC_Name", client_PIC_Name) :
                new ObjectParameter("Client_PIC_Name", typeof(string));
    
            var bank_ChargesParameter = bank_Charges.HasValue ?
                new ObjectParameter("Bank_Charges", bank_Charges) :
                new ObjectParameter("Bank_Charges", typeof(double));
    
            var transfer_ToParameter = transfer_To != null ?
                new ObjectParameter("Transfer_To", transfer_To) :
                new ObjectParameter("Transfer_To", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<generateReport_FundRequisition_Result>("[ModelEntitiesWebsite].[generateReport_FundRequisition](@Organization_ID, @Payroll_Period_ID, @Run, @Employment_Status, @Client_PIC_Name, @Bank_Charges, @Transfer_To)", organization_IDParameter, payroll_Period_IDParameter, runParameter, employment_StatusParameter, client_PIC_NameParameter, bank_ChargesParameter, transfer_ToParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "checkExistingObject")]
        public virtual IQueryable<checkExistingObject_Result> checkExistingObject(string @object, string parameter)
        {
            var objectParameter = @object != null ?
                new ObjectParameter("Object", @object) :
                new ObjectParameter("Object", typeof(string));
    
            var parameterParameter = parameter != null ?
                new ObjectParameter("Parameter", parameter) :
                new ObjectParameter("Parameter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<checkExistingObject_Result>("[ModelEntitiesWebsite].[checkExistingObject](@Object, @Parameter)", objectParameter, parameterParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "GenerateReport_SalaryJournal")]
        public virtual IQueryable<GenerateReport_SalaryJournal_Result> GenerateReport_SalaryJournal(string payroll_Period_ID, string employment_Status, string calculation_Run)
        {
            var payroll_Period_IDParameter = payroll_Period_ID != null ?
                new ObjectParameter("Payroll_Period_ID", payroll_Period_ID) :
                new ObjectParameter("Payroll_Period_ID", typeof(string));
    
            var employment_StatusParameter = employment_Status != null ?
                new ObjectParameter("Employment_Status", employment_Status) :
                new ObjectParameter("Employment_Status", typeof(string));
    
            var calculation_RunParameter = calculation_Run != null ?
                new ObjectParameter("Calculation_Run", calculation_Run) :
                new ObjectParameter("Calculation_Run", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GenerateReport_SalaryJournal_Result>("[ModelEntitiesWebsite].[GenerateReport_SalaryJournal](@Payroll_Period_ID, @Employment_Status, @Calculation_Run)", payroll_Period_IDParameter, employment_StatusParameter, calculation_RunParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "GenerateReport_PayrollComparative")]
        public virtual IQueryable<GenerateReport_PayrollComparative_Result> GenerateReport_PayrollComparative(string organization_ID, string payroll_Period_ID_After, string payroll_Period_ID_Before)
        {
            var organization_IDParameter = organization_ID != null ?
                new ObjectParameter("Organization_ID", organization_ID) :
                new ObjectParameter("Organization_ID", typeof(string));
    
            var payroll_Period_ID_AfterParameter = payroll_Period_ID_After != null ?
                new ObjectParameter("Payroll_Period_ID_After", payroll_Period_ID_After) :
                new ObjectParameter("Payroll_Period_ID_After", typeof(string));
    
            var payroll_Period_ID_BeforeParameter = payroll_Period_ID_Before != null ?
                new ObjectParameter("Payroll_Period_ID_Before", payroll_Period_ID_Before) :
                new ObjectParameter("Payroll_Period_ID_Before", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GenerateReport_PayrollComparative_Result>("[ModelEntitiesWebsite].[GenerateReport_PayrollComparative](@Organization_ID, @Payroll_Period_ID_After, @Payroll_Period_ID_Before)", organization_IDParameter, payroll_Period_ID_AfterParameter, payroll_Period_ID_BeforeParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "Get_EmpPayCompAsTaxDeduction")]
        public virtual IQueryable<Get_EmpPayCompAsTaxDeduction_Result> Get_EmpPayCompAsTaxDeduction(string batch, string employee_ID, Nullable<bool> deduction, Nullable<int> correction)
        {
            var batchParameter = batch != null ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(string));
    
            var employee_IDParameter = employee_ID != null ?
                new ObjectParameter("Employee_ID", employee_ID) :
                new ObjectParameter("Employee_ID", typeof(string));
    
            var deductionParameter = deduction.HasValue ?
                new ObjectParameter("Deduction", deduction) :
                new ObjectParameter("Deduction", typeof(bool));
    
            var correctionParameter = correction.HasValue ?
                new ObjectParameter("Correction", correction) :
                new ObjectParameter("Correction", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Get_EmpPayCompAsTaxDeduction_Result>("[ModelEntitiesWebsite].[Get_EmpPayCompAsTaxDeduction](@Batch, @Employee_ID, @Deduction, @Correction)", batchParameter, employee_IDParameter, deductionParameter, correctionParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "getCalculationID")]
        public virtual IQueryable<Nullable<System.Guid>> getCalculationID(string batch)
        {
            var batchParameter = batch != null ?
                new ObjectParameter("batch", batch) :
                new ObjectParameter("batch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<System.Guid>>("[ModelEntitiesWebsite].[getCalculationID](@batch)", batchParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "generateReport_1721_Bulanan")]
        public virtual IQueryable<generateReport_1721_Bulanan_Result> generateReport_1721_Bulanan(string organization_Tax_ID, string tax_Period_ID, Nullable<int> correction, Nullable<bool> is_All_Employee)
        {
            var organization_Tax_IDParameter = organization_Tax_ID != null ?
                new ObjectParameter("Organization_Tax_ID", organization_Tax_ID) :
                new ObjectParameter("Organization_Tax_ID", typeof(string));
    
            var tax_Period_IDParameter = tax_Period_ID != null ?
                new ObjectParameter("Tax_Period_ID", tax_Period_ID) :
                new ObjectParameter("Tax_Period_ID", typeof(string));
    
            var correctionParameter = correction.HasValue ?
                new ObjectParameter("Correction", correction) :
                new ObjectParameter("Correction", typeof(int));
    
            var is_All_EmployeeParameter = is_All_Employee.HasValue ?
                new ObjectParameter("Is_All_Employee", is_All_Employee) :
                new ObjectParameter("Is_All_Employee", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<generateReport_1721_Bulanan_Result>("[ModelEntitiesWebsite].[generateReport_1721_Bulanan](@Organization_Tax_ID, @Tax_Period_ID, @Correction, @Is_All_Employee)", organization_Tax_IDParameter, tax_Period_IDParameter, correctionParameter, is_All_EmployeeParameter);
        }
    
        public virtual int SP_PAYSLIP_SETTING(Nullable<System.Guid> oRG_ID, Nullable<System.Guid> pAYSLIP_ID, string uSER_LOGIN)
        {
            var oRG_IDParameter = oRG_ID.HasValue ?
                new ObjectParameter("ORG_ID", oRG_ID) :
                new ObjectParameter("ORG_ID", typeof(System.Guid));
    
            var pAYSLIP_IDParameter = pAYSLIP_ID.HasValue ?
                new ObjectParameter("PAYSLIP_ID", pAYSLIP_ID) :
                new ObjectParameter("PAYSLIP_ID", typeof(System.Guid));
    
            var uSER_LOGINParameter = uSER_LOGIN != null ?
                new ObjectParameter("USER_LOGIN", uSER_LOGIN) :
                new ObjectParameter("USER_LOGIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAYSLIP_SETTING", oRG_IDParameter, pAYSLIP_IDParameter, uSER_LOGINParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "Get_Tax_Bracket")]
        public virtual IQueryable<Get_Tax_Bracket_Result> Get_Tax_Bracket(string employee_ID, string calculation_Flag, string employment_Status, Nullable<double> taxable_Income, string calculationType, string nPWP)
        {
            var employee_IDParameter = employee_ID != null ?
                new ObjectParameter("Employee_ID", employee_ID) :
                new ObjectParameter("Employee_ID", typeof(string));
    
            var calculation_FlagParameter = calculation_Flag != null ?
                new ObjectParameter("Calculation_Flag", calculation_Flag) :
                new ObjectParameter("Calculation_Flag", typeof(string));
    
            var employment_StatusParameter = employment_Status != null ?
                new ObjectParameter("Employment_Status", employment_Status) :
                new ObjectParameter("Employment_Status", typeof(string));
    
            var taxable_IncomeParameter = taxable_Income.HasValue ?
                new ObjectParameter("Taxable_Income", taxable_Income) :
                new ObjectParameter("Taxable_Income", typeof(double));
    
            var calculationTypeParameter = calculationType != null ?
                new ObjectParameter("CalculationType", calculationType) :
                new ObjectParameter("CalculationType", typeof(string));
    
            var nPWPParameter = nPWP != null ?
                new ObjectParameter("NPWP", nPWP) :
                new ObjectParameter("NPWP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Get_Tax_Bracket_Result>("[ModelEntitiesWebsite].[Get_Tax_Bracket](@Employee_ID, @Calculation_Flag, @Employment_Status, @Taxable_Income, @CalculationType, @NPWP)", employee_IDParameter, calculation_FlagParameter, employment_StatusParameter, taxable_IncomeParameter, calculationTypeParameter, nPWPParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "Validate_Recalculate_OnHistory")]
        public virtual IQueryable<Validate_Recalculate_OnHistory_Result> Validate_Recalculate_OnHistory(string @event, string organization_id, Nullable<int> payroll_Year)
        {
            var eventParameter = @event != null ?
                new ObjectParameter("Event", @event) :
                new ObjectParameter("Event", typeof(string));
    
            var organization_idParameter = organization_id != null ?
                new ObjectParameter("Organization_id", organization_id) :
                new ObjectParameter("Organization_id", typeof(string));
    
            var payroll_YearParameter = payroll_Year.HasValue ?
                new ObjectParameter("Payroll_Year", payroll_Year) :
                new ObjectParameter("Payroll_Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Validate_Recalculate_OnHistory_Result>("[ModelEntitiesWebsite].[Validate_Recalculate_OnHistory](@Event, @Organization_id, @Payroll_Year)", eventParameter, organization_idParameter, payroll_YearParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "generateReport_1721_A1")]
        public virtual IQueryable<generateReport_1721_A1_Result> generateReport_1721_A1(string organization_Tax_ID, Nullable<System.DateTime> tax_Period_From, Nullable<System.DateTime> tax_Period_To, string employee_Status, string employee_Coverage, Nullable<System.DateTime> date)
        {
            var organization_Tax_IDParameter = organization_Tax_ID != null ?
                new ObjectParameter("Organization_Tax_ID", organization_Tax_ID) :
                new ObjectParameter("Organization_Tax_ID", typeof(string));
    
            var tax_Period_FromParameter = tax_Period_From.HasValue ?
                new ObjectParameter("Tax_Period_From", tax_Period_From) :
                new ObjectParameter("Tax_Period_From", typeof(System.DateTime));
    
            var tax_Period_ToParameter = tax_Period_To.HasValue ?
                new ObjectParameter("Tax_Period_To", tax_Period_To) :
                new ObjectParameter("Tax_Period_To", typeof(System.DateTime));
    
            var employee_StatusParameter = employee_Status != null ?
                new ObjectParameter("Employee_Status", employee_Status) :
                new ObjectParameter("Employee_Status", typeof(string));
    
            var employee_CoverageParameter = employee_Coverage != null ?
                new ObjectParameter("Employee_Coverage", employee_Coverage) :
                new ObjectParameter("Employee_Coverage", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<generateReport_1721_A1_Result>("[ModelEntitiesWebsite].[generateReport_1721_A1](@Organization_Tax_ID, @Tax_Period_From, @Tax_Period_To, @Employee_Status, @Employee_Coverage, @Date)", organization_Tax_IDParameter, tax_Period_FromParameter, tax_Period_ToParameter, employee_StatusParameter, employee_CoverageParameter, dateParameter);
        }
    
        public virtual int SP_TAX_CALCULATION_EMPLOYEE(string calculation_ID, Nullable<int> from_Index, Nullable<int> to_Index)
        {
            var calculation_IDParameter = calculation_ID != null ?
                new ObjectParameter("Calculation_ID", calculation_ID) :
                new ObjectParameter("Calculation_ID", typeof(string));
    
            var from_IndexParameter = from_Index.HasValue ?
                new ObjectParameter("From_Index", from_Index) :
                new ObjectParameter("From_Index", typeof(int));
    
            var to_IndexParameter = to_Index.HasValue ?
                new ObjectParameter("To_Index", to_Index) :
                new ObjectParameter("To_Index", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_TAX_CALCULATION_EMPLOYEE", calculation_IDParameter, from_IndexParameter, to_IndexParameter);
        }
    
        public virtual int SP_TAX_CALCULATION_FINALIZE(string calculation_ID)
        {
            var calculation_IDParameter = calculation_ID != null ?
                new ObjectParameter("Calculation_ID", calculation_ID) :
                new ObjectParameter("Calculation_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_TAX_CALCULATION_FINALIZE", calculation_IDParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "Get_Employee_Master_Data")]
        public virtual IQueryable<Get_Employee_Master_Data_Result> Get_Employee_Master_Data(Nullable<System.Guid> organization_ID, Nullable<int> tax_Year)
        {
            var organization_IDParameter = organization_ID.HasValue ?
                new ObjectParameter("Organization_ID", organization_ID) :
                new ObjectParameter("Organization_ID", typeof(System.Guid));
    
            var tax_YearParameter = tax_Year.HasValue ?
                new ObjectParameter("Tax_Year", tax_Year) :
                new ObjectParameter("Tax_Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Get_Employee_Master_Data_Result>("[ModelEntitiesWebsite].[Get_Employee_Master_Data](@Organization_ID, @Tax_Year)", organization_IDParameter, tax_YearParameter);
        }
    
        public virtual int SP_Update_Appointment_Working_Time(Nullable<System.Guid> oRG_ID, string vALUE_BEFORE, string vALUE_AFTER, string tYPE)
        {
            var oRG_IDParameter = oRG_ID.HasValue ?
                new ObjectParameter("ORG_ID", oRG_ID) :
                new ObjectParameter("ORG_ID", typeof(System.Guid));
    
            var vALUE_BEFOREParameter = vALUE_BEFORE != null ?
                new ObjectParameter("VALUE_BEFORE", vALUE_BEFORE) :
                new ObjectParameter("VALUE_BEFORE", typeof(string));
    
            var vALUE_AFTERParameter = vALUE_AFTER != null ?
                new ObjectParameter("VALUE_AFTER", vALUE_AFTER) :
                new ObjectParameter("VALUE_AFTER", typeof(string));
    
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Appointment_Working_Time", oRG_IDParameter, vALUE_BEFOREParameter, vALUE_AFTERParameter, tYPEParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "Get_Summary_Record")]
        public virtual IQueryable<Get_Summary_Record_Result> Get_Summary_Record(Nullable<System.Guid> oRGANIZATION_ID)
        {
            var oRGANIZATION_IDParameter = oRGANIZATION_ID.HasValue ?
                new ObjectParameter("ORGANIZATION_ID", oRGANIZATION_ID) :
                new ObjectParameter("ORGANIZATION_ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Get_Summary_Record_Result>("[ModelEntitiesWebsite].[Get_Summary_Record](@ORGANIZATION_ID)", oRGANIZATION_IDParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "Generate_BPJS_TK_Employee")]
        public virtual IQueryable<Generate_BPJS_TK_Employee_Result> Generate_BPJS_TK_Employee(Nullable<System.Guid> org_Id)
        {
            var org_IdParameter = org_Id.HasValue ?
                new ObjectParameter("Org_Id", org_Id) :
                new ObjectParameter("Org_Id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Generate_BPJS_TK_Employee_Result>("[ModelEntitiesWebsite].[Generate_BPJS_TK_Employee](@Org_Id)", org_IdParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "Get_Employee_Report_Attendance")]
        public virtual IQueryable<Get_Employee_Report_Attendance_Result> Get_Employee_Report_Attendance(Nullable<System.Guid> period_ID)
        {
            var period_IDParameter = period_ID.HasValue ?
                new ObjectParameter("Period_ID", period_ID) :
                new ObjectParameter("Period_ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Get_Employee_Report_Attendance_Result>("[ModelEntitiesWebsite].[Get_Employee_Report_Attendance](@Period_ID)", period_IDParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "Get_Employee_Report_Claim")]
        public virtual IQueryable<Get_Employee_Report_Claim_Result> Get_Employee_Report_Claim(Nullable<System.Guid> period_ID)
        {
            var period_IDParameter = period_ID.HasValue ?
                new ObjectParameter("Period_ID", period_ID) :
                new ObjectParameter("Period_ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Get_Employee_Report_Claim_Result>("[ModelEntitiesWebsite].[Get_Employee_Report_Claim](@Period_ID)", period_IDParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "Get_Employee_Report_Overtime")]
        public virtual IQueryable<Get_Employee_Report_Overtime_Result> Get_Employee_Report_Overtime(Nullable<System.Guid> period_ID)
        {
            var period_IDParameter = period_ID.HasValue ?
                new ObjectParameter("Period_ID", period_ID) :
                new ObjectParameter("Period_ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Get_Employee_Report_Overtime_Result>("[ModelEntitiesWebsite].[Get_Employee_Report_Overtime](@Period_ID)", period_IDParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "Get_Report_Leave")]
        public virtual IQueryable<Get_Report_Leave_Result> Get_Report_Leave(Nullable<System.Guid> oRGANIZATION_ID, Nullable<System.DateTime> sTART_FROM, Nullable<System.DateTime> sTART_TO)
        {
            var oRGANIZATION_IDParameter = oRGANIZATION_ID.HasValue ?
                new ObjectParameter("ORGANIZATION_ID", oRGANIZATION_ID) :
                new ObjectParameter("ORGANIZATION_ID", typeof(System.Guid));
    
            var sTART_FROMParameter = sTART_FROM.HasValue ?
                new ObjectParameter("START_FROM", sTART_FROM) :
                new ObjectParameter("START_FROM", typeof(System.DateTime));
    
            var sTART_TOParameter = sTART_TO.HasValue ?
                new ObjectParameter("START_TO", sTART_TO) :
                new ObjectParameter("START_TO", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Get_Report_Leave_Result>("[ModelEntitiesWebsite].[Get_Report_Leave](@ORGANIZATION_ID, @START_FROM, @START_TO)", oRGANIZATION_IDParameter, sTART_FROMParameter, sTART_TOParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "Get_Report_Overtime")]
        public virtual IQueryable<Get_Report_Overtime_Result> Get_Report_Overtime(Nullable<System.Guid> oRGANIZATION_ID, Nullable<System.DateTime> sTART_FROM, Nullable<System.DateTime> sTART_TO)
        {
            var oRGANIZATION_IDParameter = oRGANIZATION_ID.HasValue ?
                new ObjectParameter("ORGANIZATION_ID", oRGANIZATION_ID) :
                new ObjectParameter("ORGANIZATION_ID", typeof(System.Guid));
    
            var sTART_FROMParameter = sTART_FROM.HasValue ?
                new ObjectParameter("START_FROM", sTART_FROM) :
                new ObjectParameter("START_FROM", typeof(System.DateTime));
    
            var sTART_TOParameter = sTART_TO.HasValue ?
                new ObjectParameter("START_TO", sTART_TO) :
                new ObjectParameter("START_TO", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Get_Report_Overtime_Result>("[ModelEntitiesWebsite].[Get_Report_Overtime](@ORGANIZATION_ID, @START_FROM, @START_TO)", oRGANIZATION_IDParameter, sTART_FROMParameter, sTART_TOParameter);
        }
    
        public virtual int SP_INSERT_DATA_TRIAL_HARIGAJIAN(Nullable<System.Guid> oRG_ID)
        {
            var oRG_IDParameter = oRG_ID.HasValue ?
                new ObjectParameter("ORG_ID", oRG_ID) :
                new ObjectParameter("ORG_ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_DATA_TRIAL_HARIGAJIAN", oRG_IDParameter);
        }
    
        public virtual int changeLocation(string locationExist, Nullable<System.Guid> organization_ID, string locationChange)
        {
            var locationExistParameter = locationExist != null ?
                new ObjectParameter("LocationExist", locationExist) :
                new ObjectParameter("LocationExist", typeof(string));
    
            var organization_IDParameter = organization_ID.HasValue ?
                new ObjectParameter("Organization_ID", organization_ID) :
                new ObjectParameter("Organization_ID", typeof(System.Guid));
    
            var locationChangeParameter = locationChange != null ?
                new ObjectParameter("LocationChange", locationChange) :
                new ObjectParameter("LocationChange", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("changeLocation", locationExistParameter, organization_IDParameter, locationChangeParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "Get_Employee_Report_Leave")]
        public virtual IQueryable<Get_Employee_Report_Leave_Result> Get_Employee_Report_Leave(Nullable<System.Guid> period_ID)
        {
            var period_IDParameter = period_ID.HasValue ?
                new ObjectParameter("Period_ID", period_ID) :
                new ObjectParameter("Period_ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Get_Employee_Report_Leave_Result>("[ModelEntitiesWebsite].[Get_Employee_Report_Leave](@Period_ID)", period_IDParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "Get_Report_Claim")]
        public virtual IQueryable<Get_Report_Claim_Result> Get_Report_Claim(Nullable<System.Guid> oRGANIZATION_ID, Nullable<System.DateTime> sTART_FROM, Nullable<System.DateTime> sTART_TO)
        {
            var oRGANIZATION_IDParameter = oRGANIZATION_ID.HasValue ?
                new ObjectParameter("ORGANIZATION_ID", oRGANIZATION_ID) :
                new ObjectParameter("ORGANIZATION_ID", typeof(System.Guid));
    
            var sTART_FROMParameter = sTART_FROM.HasValue ?
                new ObjectParameter("START_FROM", sTART_FROM) :
                new ObjectParameter("START_FROM", typeof(System.DateTime));
    
            var sTART_TOParameter = sTART_TO.HasValue ?
                new ObjectParameter("START_TO", sTART_TO) :
                new ObjectParameter("START_TO", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Get_Report_Claim_Result>("[ModelEntitiesWebsite].[Get_Report_Claim](@ORGANIZATION_ID, @START_FROM, @START_TO)", oRGANIZATION_IDParameter, sTART_FROMParameter, sTART_TOParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "Get_Payslip_Employee_Information")]
        public virtual IQueryable<Get_Payslip_Employee_Information_Result> Get_Payslip_Employee_Information(Nullable<System.Guid> period_ID)
        {
            var period_IDParameter = period_ID.HasValue ?
                new ObjectParameter("Period_ID", period_ID) :
                new ObjectParameter("Period_ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Get_Payslip_Employee_Information_Result>("[ModelEntitiesWebsite].[Get_Payslip_Employee_Information](@Period_ID)", period_IDParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "generateReport_1721_Final")]
        public virtual IQueryable<generateReport_1721_Final_Result> generateReport_1721_Final(string organization_Tax_ID, string tax_Period_ID)
        {
            var organization_Tax_IDParameter = organization_Tax_ID != null ?
                new ObjectParameter("Organization_Tax_ID", organization_Tax_ID) :
                new ObjectParameter("Organization_Tax_ID", typeof(string));
    
            var tax_Period_IDParameter = tax_Period_ID != null ?
                new ObjectParameter("Tax_Period_ID", tax_Period_ID) :
                new ObjectParameter("Tax_Period_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<generateReport_1721_Final_Result>("[ModelEntitiesWebsite].[generateReport_1721_Final](@Organization_Tax_ID, @Tax_Period_ID)", organization_Tax_IDParameter, tax_Period_IDParameter);
        }
    
        public virtual int SP_INSERT_UPLOADED_FILE(string oRG_ID, Nullable<System.Guid> uPLOAD_NUMBER, string uSER_LOGIN)
        {
            var oRG_IDParameter = oRG_ID != null ?
                new ObjectParameter("ORG_ID", oRG_ID) :
                new ObjectParameter("ORG_ID", typeof(string));
    
            var uPLOAD_NUMBERParameter = uPLOAD_NUMBER.HasValue ?
                new ObjectParameter("UPLOAD_NUMBER", uPLOAD_NUMBER) :
                new ObjectParameter("UPLOAD_NUMBER", typeof(System.Guid));
    
            var uSER_LOGINParameter = uSER_LOGIN != null ?
                new ObjectParameter("USER_LOGIN", uSER_LOGIN) :
                new ObjectParameter("USER_LOGIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_UPLOADED_FILE", oRG_IDParameter, uPLOAD_NUMBERParameter, uSER_LOGINParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "GenerateReport_SalaryJournalAdditional")]
        public virtual IQueryable<GenerateReport_SalaryJournalAdditional_Result> GenerateReport_SalaryJournalAdditional(string payroll_Period_ID, string employment_Status, string calculation_Run)
        {
            var payroll_Period_IDParameter = payroll_Period_ID != null ?
                new ObjectParameter("Payroll_Period_ID", payroll_Period_ID) :
                new ObjectParameter("Payroll_Period_ID", typeof(string));
    
            var employment_StatusParameter = employment_Status != null ?
                new ObjectParameter("Employment_Status", employment_Status) :
                new ObjectParameter("Employment_Status", typeof(string));
    
            var calculation_RunParameter = calculation_Run != null ?
                new ObjectParameter("Calculation_Run", calculation_Run) :
                new ObjectParameter("Calculation_Run", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GenerateReport_SalaryJournalAdditional_Result>("[ModelEntitiesWebsite].[GenerateReport_SalaryJournalAdditional](@Payroll_Period_ID, @Employment_Status, @Calculation_Run)", payroll_Period_IDParameter, employment_StatusParameter, calculation_RunParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "Get_Organization_Attendance")]
        public virtual IQueryable<Get_Organization_Attendance_Result> Get_Organization_Attendance(Nullable<System.Guid> organization_ID, Nullable<System.DateTime> cut_Off_Start, Nullable<System.DateTime> cut_Off_End)
        {
            var organization_IDParameter = organization_ID.HasValue ?
                new ObjectParameter("Organization_ID", organization_ID) :
                new ObjectParameter("Organization_ID", typeof(System.Guid));
    
            var cut_Off_StartParameter = cut_Off_Start.HasValue ?
                new ObjectParameter("Cut_Off_Start", cut_Off_Start) :
                new ObjectParameter("Cut_Off_Start", typeof(System.DateTime));
    
            var cut_Off_EndParameter = cut_Off_End.HasValue ?
                new ObjectParameter("Cut_Off_End", cut_Off_End) :
                new ObjectParameter("Cut_Off_End", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Get_Organization_Attendance_Result>("[ModelEntitiesWebsite].[Get_Organization_Attendance](@Organization_ID, @Cut_Off_Start, @Cut_Off_End)", organization_IDParameter, cut_Off_StartParameter, cut_Off_EndParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "Get_Employee_Attendance")]
        public virtual IQueryable<Get_Employee_Attendance_Result> Get_Employee_Attendance(Nullable<System.Guid> employee_Id, Nullable<System.DateTime> cut_Off_Start, Nullable<System.DateTime> cut_Off_End)
        {
            var employee_IdParameter = employee_Id.HasValue ?
                new ObjectParameter("Employee_Id", employee_Id) :
                new ObjectParameter("Employee_Id", typeof(System.Guid));
    
            var cut_Off_StartParameter = cut_Off_Start.HasValue ?
                new ObjectParameter("Cut_Off_Start", cut_Off_Start) :
                new ObjectParameter("Cut_Off_Start", typeof(System.DateTime));
    
            var cut_Off_EndParameter = cut_Off_End.HasValue ?
                new ObjectParameter("Cut_Off_End", cut_Off_End) :
                new ObjectParameter("Cut_Off_End", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Get_Employee_Attendance_Result>("[ModelEntitiesWebsite].[Get_Employee_Attendance](@Employee_Id, @Cut_Off_Start, @Cut_Off_End)", employee_IdParameter, cut_Off_StartParameter, cut_Off_EndParameter);
        }
    
        public virtual int SP_CLEAN_DATA_CALCULATION(Nullable<System.Guid> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CLEAN_DATA_CALCULATION", iDParameter);
        }
    
        public virtual int SP_CLEAN_DATA_CALCULATION_EMPLOYEE(Nullable<System.Guid> iD, Nullable<System.Guid> eMPLOYEE_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var eMPLOYEE_IDParameter = eMPLOYEE_ID.HasValue ?
                new ObjectParameter("EMPLOYEE_ID", eMPLOYEE_ID) :
                new ObjectParameter("EMPLOYEE_ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CLEAN_DATA_CALCULATION_EMPLOYEE", iDParameter, eMPLOYEE_IDParameter);
        }
    
        public virtual int SP_CALCULATE_FORMULA_EMPLOYEE_PART(string calculation_ID, string employee_ID_Param)
        {
            var calculation_IDParameter = calculation_ID != null ?
                new ObjectParameter("Calculation_ID", calculation_ID) :
                new ObjectParameter("Calculation_ID", typeof(string));
    
            var employee_ID_ParamParameter = employee_ID_Param != null ?
                new ObjectParameter("Employee_ID_Param", employee_ID_Param) :
                new ObjectParameter("Employee_ID_Param", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CALCULATE_FORMULA_EMPLOYEE_PART", calculation_IDParameter, employee_ID_ParamParameter);
        }
    
        public virtual int SP_TAX_CALCULATION_EMPLOYEE_PART(string calculation_ID, string employee_ID_PARAM)
        {
            var calculation_IDParameter = calculation_ID != null ?
                new ObjectParameter("Calculation_ID", calculation_ID) :
                new ObjectParameter("Calculation_ID", typeof(string));
    
            var employee_ID_PARAMParameter = employee_ID_PARAM != null ?
                new ObjectParameter("Employee_ID_PARAM", employee_ID_PARAM) :
                new ObjectParameter("Employee_ID_PARAM", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_TAX_CALCULATION_EMPLOYEE_PART", calculation_IDParameter, employee_ID_PARAMParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "Get_Report_Leave_Entitlement")]
        public virtual IQueryable<Get_Report_Leave_Entitlement_Result> Get_Report_Leave_Entitlement(Nullable<System.Guid> oRGANIZATION_ID, Nullable<System.DateTime> pERIOD_FROM, Nullable<System.DateTime> pERIOD_TO)
        {
            var oRGANIZATION_IDParameter = oRGANIZATION_ID.HasValue ?
                new ObjectParameter("ORGANIZATION_ID", oRGANIZATION_ID) :
                new ObjectParameter("ORGANIZATION_ID", typeof(System.Guid));
    
            var pERIOD_FROMParameter = pERIOD_FROM.HasValue ?
                new ObjectParameter("PERIOD_FROM", pERIOD_FROM) :
                new ObjectParameter("PERIOD_FROM", typeof(System.DateTime));
    
            var pERIOD_TOParameter = pERIOD_TO.HasValue ?
                new ObjectParameter("PERIOD_TO", pERIOD_TO) :
                new ObjectParameter("PERIOD_TO", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Get_Report_Leave_Entitlement_Result>("[ModelEntitiesWebsite].[Get_Report_Leave_Entitlement](@ORGANIZATION_ID, @PERIOD_FROM, @PERIOD_TO)", oRGANIZATION_IDParameter, pERIOD_FROMParameter, pERIOD_TOParameter);
        }
    
        public virtual int SP_OPEN_CLOSING(string organization_ID, string calculation_Type, Nullable<int> tax_Year, string closing_ID)
        {
            var organization_IDParameter = organization_ID != null ?
                new ObjectParameter("Organization_ID", organization_ID) :
                new ObjectParameter("Organization_ID", typeof(string));
    
            var calculation_TypeParameter = calculation_Type != null ?
                new ObjectParameter("Calculation_Type", calculation_Type) :
                new ObjectParameter("Calculation_Type", typeof(string));
    
            var tax_YearParameter = tax_Year.HasValue ?
                new ObjectParameter("Tax_Year", tax_Year) :
                new ObjectParameter("Tax_Year", typeof(int));
    
            var closing_IDParameter = closing_ID != null ?
                new ObjectParameter("Closing_ID", closing_ID) :
                new ObjectParameter("Closing_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPEN_CLOSING", organization_IDParameter, calculation_TypeParameter, tax_YearParameter, closing_IDParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "Get_Report_Attendance")]
        public virtual IQueryable<Get_Report_Attendance_Result> Get_Report_Attendance(Nullable<System.Guid> oRGANIZATION_ID, Nullable<System.DateTime> sTART_FROM, Nullable<System.DateTime> sTART_TO)
        {
            var oRGANIZATION_IDParameter = oRGANIZATION_ID.HasValue ?
                new ObjectParameter("ORGANIZATION_ID", oRGANIZATION_ID) :
                new ObjectParameter("ORGANIZATION_ID", typeof(System.Guid));
    
            var sTART_FROMParameter = sTART_FROM.HasValue ?
                new ObjectParameter("START_FROM", sTART_FROM) :
                new ObjectParameter("START_FROM", typeof(System.DateTime));
    
            var sTART_TOParameter = sTART_TO.HasValue ?
                new ObjectParameter("START_TO", sTART_TO) :
                new ObjectParameter("START_TO", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Get_Report_Attendance_Result>("[ModelEntitiesWebsite].[Get_Report_Attendance](@ORGANIZATION_ID, @START_FROM, @START_TO)", oRGANIZATION_IDParameter, sTART_FROMParameter, sTART_TOParameter);
        }
    
        [DbFunction("ModelEntitiesWebsite", "Get_Report_Employee_History")]
        public virtual IQueryable<Get_Report_Employee_History_Result> Get_Report_Employee_History(Nullable<System.Guid> period_ID)
        {
            var period_IDParameter = period_ID.HasValue ?
                new ObjectParameter("Period_ID", period_ID) :
                new ObjectParameter("Period_ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Get_Report_Employee_History_Result>("[ModelEntitiesWebsite].[Get_Report_Employee_History](@Period_ID)", period_IDParameter);
        }
    }
}
